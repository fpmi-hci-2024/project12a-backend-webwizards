openapi: 3.0.3
info:
  title: Cifrovic API
  version: 0.0.1
  description: API for online tech shop Cifrovic
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /cart/:
    get:
      operationId: cart_retrieve
      description: Получить детали текущей корзины пользователя.
      summary: Получение корзины
      tags:
      - cart
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
        '404':
          description: Корзина не найдена.
    post:
      operationId: cart_create
      description: Добавить новый товар в корзину пользователя.
      summary: Добавление товара в корзину
      tags:
      - cart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
            examples:
              ПримерЗапроса:
                value:
                  product: 1
                  quantity: 2
                summary: Добавление товара в корзину
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
              examples:
                ПримерЗапроса:
                  value:
                    product: 1
                    quantity: 2
                  summary: Добавление товара в корзину
          description: ''
        '400':
          description: Ошибка валидации данных.
    delete:
      operationId: cart_destroy
      description: Удалить все товары из корзины текущего пользователя.
      summary: Очистка корзины
      tags:
      - cart
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: Корзина успешно очищена.
  /cart/items/{id}/:
    delete:
      operationId: cart_items_destroy
      description: Удалить товар из корзины текущего пользователя по ID элемента.
      summary: Удаление товара из корзины
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cart
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: Элемент успешно удален.
        '404':
          description: Элемент не найден.
  /categories/:
    get:
      operationId: categories_list
      description: Получить список всех доступных категорий.
      summary: Получение списка категорий
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /categories/{slug}/:
    get:
      operationId: categories_list_2
      description: Получить список продуктов в указанной категории. Поддерживаются
        фильтры по цене, производителям и году выпуска.
      summary: Получение продуктов по категории
      parameters:
      - in: query
        name: manufacturers
        schema:
          type: string
        description: Список производителей
      - in: query
        name: max_price
        schema:
          type: integer
        description: Максимальная цена продукта
      - in: query
        name: max_year
        schema:
          type: integer
        description: Максимальный год выпуска продукта
      - in: query
        name: min_price
        schema:
          type: integer
        description: Минимальная цена продукта
      - in: query
        name: min_year
        schema:
          type: integer
        description: Минимальный год выпуска продукта
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
        '404':
          description: Продукты не найдены для этой категории.
  /orders/:
    get:
      operationId: orders_retrieve
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: orders_create
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: orders_destroy
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /products/:
    get:
      operationId: products_list
      description: Получить все доступные товары.
      summary: Получение всех доступных товаров
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /products/{id}/:
    get:
      operationId: products_retrieve
      description: Получить подробную информацию о продукте по его ID.
      summary: Получение информации о товаре
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
        '404':
          description: Товар не найден
  /products/{product_id}/reviews/:
    get:
      operationId: products_reviews_list
      description: Получить список отзывов для указанного продукта. Если отзывы отсутствуют,
        будет возвращено сообщение об ошибке.
      summary: Получение отзывов о продукте
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
          description: ''
        '404':
          description: Отзывы для этого продукта не найдены.
    post:
      operationId: products_reviews_create
      description: Создать новый отзыв для указанного продукта. Если отзыв уже существует
        от текущего пользователя, будет возвращено сообщение об ошибке.
      summary: Добавление отзыва на продукт
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
        '400':
          description: Ошибка валидации данных. Пользователь уже оставил отзыв.
    delete:
      operationId: products_reviews_destroy
      description: Удалить отзыв пользователя о продукте. Если отзыв не найден, будет
        возвращено сообщение об ошибке.
      summary: Удаление отзыва о продукте
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: Отзыв успешно удален.
        '404':
          description: Отзыв не найден.
  /user/:
    post:
      operationId: user_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /user/favorites/:
    get:
      operationId: user_favorites_retrieve
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: user_favorites_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: user_favorites_destroy
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /user/login/:
    post:
      operationId: user_login_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
components:
  schemas:
    Cart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
      - items
      - updated
    CartItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - id
      - product
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        slug:
          type: string
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
      required:
      - id
      - name
      - slug
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        profile:
          type: integer
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        status:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
      required:
      - created
      - id
      - items
      - profile
      - updated
    OrderItem:
      type: object
      properties:
        product:
          type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - price
      - product
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        slug:
          type: string
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
        manufacturer:
          type: string
          maxLength: 200
        release_year:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        available:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
      - name
      - price
      - slug
      - stock
      - updated
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
      required:
      - id
      - user
    RatingEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - 1
        * `2` - 2
        * `3` - 3
        * `4` - 4
        * `5` - 5
    Review:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          readOnly: true
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          minimum: 0
          maximum: 2147483647
        comment:
          type: string
          nullable: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
      - product
      - profile
      - rating
      - updated
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
      - username
    UserLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    UserRegistration:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - password
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
